<% layout('../layouts/default') %>
<div id="direct_upload">
  <h1>New Photo</h1>
  <h2>Direct upload from the browser</h2>
  <p>You can also drag and drop an image file into the dashed area.</p>
  <form action="/photos/direct" method="post">

    <div class="form_line">
      <label for="photo_title">Title:</label>
      <div class="form_controls">
        <input id="photo_title" name="title" size="30" type="text" value="<%=photo.title%>" />
      </div>
    </div>
    <div class="form_line">
      <label for="photo_image">Image:</label>
      <div class="form_controls">
        <div class="upload_button_holder">
          <a href="#" class='upload_button'>Upload</a>
          <%-cloudinary.uploader.image_upload_tag('image_id', { callback: cloudinary_cors, return_delete_token: true })%>
        </div>
        <span class="status"></span>

      </div>
    </div>

    <div class="form_line">
      <div class="form_controls">
        <div class="preview"></div>
      </div>
    </div>
    <div class="form_line">
      <div class="form_controls">
        <input name="type" type="hidden" value="direct" />
        <input name="commit" type="submit" value="Submit Photo" />

      </div>
    </div>
  </form>
</div>

<a href="/photos" class="back_link">Back to list</a>


<div id="info"></div>

<!-- Configure Cloudinary jQuery plugin -->
<%- cloudinary.cloudinary_js_config()%>

<script>
  $(document).ready(function() {
    // Cloudinary jQuery integration library uses jQuery File Upload widget
    // (see http://blueimp.github.io/jQuery-File-Upload/).
    // Any file input field with cloudinary-fileupload class is automatically
    // wrapped using the File Upload widget and configured for Cloudinary uploads.
    // You can further customize the configuration using .fileupload method
    // as we do below.
    $(".cloudinary-fileupload")
    .cloudinary_fileupload({
      // Uncomment the following lines to enable client side image resizing and valiation.
      // Make sure cloudinary/processing is included the js file
      // disableImageResize: false,
      // imageMaxWidth: 800,
      // imageMaxHeight: 600,
      // acceptFileTypes: /(\.|\/)(gif|jpe?g|png|bmp|ico)$/i,
      // maxFileSize: 20000000, // 20MB
      dropZone: "#direct_upload",
      start: function (e) {
        $(".status").text("Starting upload...");
      },
      progress: function (e, data) {
        $(".status").text("Uploading... " + Math.round((data.loaded * 100.0) / data.total) + "%");
      },
      fail: function (e, data) {
        $(".status").text("Upload failed");
      }
    })
    .off("cloudinarydone").on("cloudinarydone", function (e, data) {
      $(".status").text("");
      let preview = $(".preview").html('');
      $.cloudinary.image(data.result.public_id, {
        format: data.result.format, width: 50, height: 50, crop: "fit"
      }).appendTo(preview);

      $('<a>').
        addClass('delete_by_token').
        attr({href: '#'}).
        data({delete_token: data.result.delete_token}).
        html('&times;').
        appendTo(preview).
        click(function(e) {
        e.preventDefault();
        $.cloudinary.delete_by_token($(this).data('delete_token')).done(function(){
          $('.preview').html('');
          $('#info').html('');
          $("#photo_bytes").val('');
          $('input[name="photo[image]"]').remove();
        }).fail(function() {
          $('.status').text("Cannot delete image");
        });
      });
      view_upload_details(data.result);
    });
  });

  function view_upload_details(upload) {
    // Build an html table out of the upload object
    let rows = [];
    $.each(upload, function(k,v){
      rows.push(
        $("<tr>")
        .append($("<td>").text(k))
        .append($("<td>").text(JSON.stringify(v))));
    });
    $("#info").html(
      $("<div class=\"upload_details\">")
      .append("<h2>Upload metadata:</h2>")
      .append($("<table>").append(rows)));
  }
</script>
